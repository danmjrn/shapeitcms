security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\InternalUser:
            algorithm: auto
        App\Entity\ExternalUser:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_internal_users:
            entity:
                class: App\Entity\InternalUser
                property: email
        app_external_users:
            entity:
                class: App\Entity\ExternalUser
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        external:
            pattern: '/external'
            lazy: true
            provider: app_external_users
            custom_authenticator:
                - App\Security\Authentication\ExternalUserAuthenticator
            entry_point: App\Security\Authentication\ExternalUserAuthenticator
            form_login:
                login_path: external_login
                check_path: external_login
                enable_csrf: true
            logout:
                path: external_logout
                target: external_login
                # where to redirect after logout
                # target: app_any_route
        internal:
            lazy: true
            pattern: '/internal'
            provider: app_internal_users
            custom_authenticator:
                - App\Security\Authentication\InternalUserAuthenticator
            entry_point: App\Security\Authentication\InternalUserAuthenticator
            form_login:
                login_path: internal_login
                check_path: internal_login
                enable_csrf: true
            logout:
                path: internal_logout
                target: internal_login
                # where to redirect after logout
                # target: app_any_route

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/internal, roles:
          [
                  ROLE_INTERNAL_ADMIN,
                  ROLE_INTERNAL_EDITOR,
                  ROLE_INTERNAL_VIEWER,
                  ROLE_SUPER_ADMIN
          ]
        }
        - { route: 'internal_login', roles: PUBLIC_ACCESS }
#        - { path: ^/internal/sign-out, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/internal/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/internal/sign-up, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/external, roles:
          [
                  ROLE_EXTERNAL_USER,
                  ROLE_CUSTOMER
          ]
        }
#        - { path: ^/external/sign-in, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/external/sign-out, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/external/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/external/sign-up, roles: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon